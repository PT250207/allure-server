replicaCount: 1

image:
  repository: kochetkovma/allure-server
  pullPolicy: IfNotPresent
  ## Don't use 'latest' ;)
  tag: 2.9.1

## Add 'key: value collection' and delete '{ }' if need
## Uncomment and remove '{ }' if need
imagePullSecrets: { }
#- secretName: your-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  ## Specifies whether a service account should be created
  create: false
  ## Annotations to add to the service account
  annotations: { }
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
#fsGroup: 2000

securityContext: { }
#capabilities:
#  drop:
#  - ALL
#readOnlyRootFilesystem: true
#runAsNonRoot: true
#runAsUser: 1000

service:
  type: NodePort
  port: 8080

## Ingress for load balancer
ingress:
  enabled: true

  ## To use/deploy the Istio VirtualService is required that Istio be deployed on the cluster with at least one Gateway configured
  ## Kubernetes CustomResrouceDefnition "virtualservices.networking.istio.io" should also be present on the cluster
  istio:
    useVirtualService: false
    gatewayName: istio-system/istio-gateway  ## <namespace>/<gateway-name> format

  # For Kubernetes >= 1.19 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx

  annotations: {}
  labels: {}

  ## With hosts unset the ingress will match all hosts and ips addresses of the related ingress-controller
  # hosts:
  # - address.example.com

  path: /{{ .Release.Namespace }}/allure
  ## pathType is only for k8s >= 1.19
  pathType: ImplementationSpecific

  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: example-service
  #     servicePort: example-port
  ## Or for k8s > 1.19
  # - path: /*
  #   pathType: Prefix
  #   backend:
  #     service:
  #       name: example-service
  #       port:
  #         name: example-port

  tls: []
  # - secretName: chart-example-tls
  #   hosts:
  #     - chart-example.local


resources:
  limits:
    cpu: 800m
    memory: 800Mi
  requests:
    cpu: 400m
    memory: 400Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  #targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

## Allure filesystem storage in PVC
## enable/disable by 'pvc.enabled'
pvc:
  enabled: true
  annotations: {}
  ## Set .storageClassName if it's to use the non-default one
  ## storageClassName: <other-sc-name>
  accessModes: [ ReadWriteOnce ]
  size: 1Gi
  selectorLabels: {}

## Add cert for connection to database
## enable/disable by 'databaseCrt.enabled'
databaseCrt:
  enabled: true
  crt:
    ## Use crt as text (first priority)
    sourceText: ""
    ## Read crt from local file in helm chart (second priority)
    sourcePath: "crt/CA.pem"
    ## Mount crt to this dir in container
    targetDir: "~/.postgresql/"
  
## Internal postgresql deployment, if disabled the env vars to use an external postgres server must be set
postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    tag: 14.2.0-debian-10-r9
  auth:
    username: admin
    password: admin
    database: allure
  primary:
    service:
      type: ClusterIP
      ports:
        postgresql: 5432
    persistence:
      size: 32Gi

env:
  ## Add custom env variables
  ## OPTIONAL
  SPRING_PROFILES_ACTIVE: default

  ###############################################################
  ## For external Postgres server, if postgresql.enabled=false ##
  ###############################################################
  ## SPRING_DATASOURCE_URL: jdbc:postgresql://<external-postgres-host>:5432/allure
  ## SPRING_JPA_DATABASE: postgresql
  ## SPRING_JPA_HIBERNATE_DDL_AUTO: update
  ## Use 'secret.keys' instead this
  ## SPRING_DATASOURCE_USERNAME: <your_username>
  ## SPRING_DATASOURCE_PASSWORD: <your_password>

## Secret object name to use 'env.secret' map
## Secrets must be added manually to the namespace
## Uncomment and remove '{ }' if need
## OPTIONAL
## secret:
  ## name: allure-server-env-var-secret
  ## Env variables from secret with name from 'secret.name'
  ## OPTIONAL
  ## keys:
  ##   - SPRING_DATASOURCE_USERNAME
  ##   - SPRING_DATASOURCE_PASSWORD